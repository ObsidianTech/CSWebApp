// <auto-generated />
using CSLibrary.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CSLibrary.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CSLibrary.Models.CartItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("ID");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("CSLibrary.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.HasKey("ID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CSLibrary.Models.Project", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("ConvertedPicture");

                    b.Property<string>("Picture");

                    b.Property<string>("ProjectName");

                    b.Property<int>("ProjectType");

                    b.HasKey("ID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CSLibrary.Models.Track", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfUpload");

                    b.Property<int>("Price");

                    b.Property<int?>("ProjectAssignedID");

                    b.Property<string>("TrackFile");

                    b.Property<string>("TrackName");

                    b.Property<int>("TrackNumber");

                    b.Property<string>("URL");

                    b.Property<bool>("inProject");

                    b.Property<bool>("isMP3");

                    b.Property<bool>("isStems");

                    b.Property<bool>("isWAV");

                    b.HasKey("ID");

                    b.HasIndex("ProjectAssignedID");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("CSLibrary.Models.Track", b =>
                {
                    b.HasOne("CSLibrary.Models.Project", "ProjectAssigned")
                        .WithMany("TrackList")
                        .HasForeignKey("ProjectAssignedID");
                });
#pragma warning restore 612, 618
        }
    }
}
